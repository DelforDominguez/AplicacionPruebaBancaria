@page "/RegistroVentas"
@using AplicacionPruebaBancaria.Modelos.Parametos
@using AplicacionPruebaBancaria.Modelos.Producto
@using AplicacionPruebaBancaria.Modelos.Utilitarios
@using AplicacionPruebaBancaria.ServiciosAPI
@inject IServicioAPI ServicioAPI
@inject IBlazorStrap blazorStrap

<PageTitle>Registro Ventas</PageTitle>

<h1>Registro Ventas</h1>

@*<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>*@

@*<BSButton Color="BSColor.Primary" @onclick="MuestraMensaje">HOLIS </BSButton>

<BSLabel>Datalist example</BSLabel>
<BSInput InputType="InputType.DataList" list="datalistOptions" Value="@("Test")" />

<datalist id="datalistOptions">
    <option value="San Francisco"/>
    <option value="New York"/>
    <option value="Seattle"/>
    <option value="Los Angeles"/>
    <option value="Chicago"/>
</datalist>
*@

<BSForm IsRow="true" Gutters="Gutters.Medium" IsBasic="true">
    <BSCol Column="auto">
        <BSLabel IsHidden="true">Vendedor</BSLabel>
        <BSInput InputType="InputType.Text" placeholder="Vendedor" IsPlainText="true"  @bind-Value="@regVentasCab.IdVendedor12"/>
    </BSCol>
    <BSCol Column="auto">
        <BSLabel IsHidden="true">Cliente</BSLabel>
        <BSInput InputType="InputType.Text"  placeholder="Cliente" IsPlainText="true"   @bind-Value="@regVentasCab.IdCliente12"/>
     </BSCol>
    <BSCol Column="auto">
        <BSLabel IsHidden="true">Fecha de Emision</BSLabel>
        <BSInput InputType="InputType.Date" @bind-Value="@regVentasCab.FechaEmi25"/>
    </BSCol>
    <BSCol Column="auto">
        <BSButton Color="BSColor.Primary" @onclick="OnValidSubmit" MarginBottom="Margins.Medium" >Envia Datos</BSButton>
    </BSCol>
</BSForm>

<BSModal DataId="ProctuctoSelecionado" OnShow="@(() => SelecionProducto(new SeleccionGenerica()))">
    <BSForm Model="SeleccionProducto" OnValidSubmit="@Update">
        <BSModalHeader>Lista Producto</BSModalHeader>
        <BSModalContent>
        @*    <div class="mb-3">
                <BSLabel>Name</BSLabel>
                <BSInput InputType="InputType.Text" @bind-Value="SeleccionProducto.id" />
            </div>
            <div class="mb-3">
                <BSLabel>Email address</BSLabel>
                <BSInput InputType="InputType.Text" @bind-Value="SeleccionProducto.descripcion" />
            </div>*@
             <div class="mb-3">
                    <BSTable IsResponsive="true" IsStriped="true">
                        <BSTHead>
                            <BSTR>
                                <BSTD>#</BSTD>
                                <BSTD>Catalogo</BSTD>
                                <BSTD>Descripcion</BSTD>
                                <BSTD>Tipo Calculo</BSTD>
                                <BSTD>Accion</BSTD>
                            </BSTR>
                        </BSTHead>
                        <BSTBody>
                          
                            @foreach (ListaProducto producto in listaProductos)
                            {
                                  <BSTR>
                                     <BSTD>@producto.id01</BSTD>
                                     <BSTD>@producto.catalogo01</BSTD>
                                     <BSTD>@producto.descripcion01</BSTD>
                                     <BSTD>@producto.descripcion02</BSTD>
                                     <BSTD><BSButton Target="ProctuctoSelecionado" Color="BSColor.Primary" @onclick="SelecionProductoPopUP">Seleccionar </BSButton></BSTD>
                                  </BSTR>
                            }
                     
                        </BSTBody>
                    </BSTable>
             </div>
        </BSModalContent>
        <BSModalFooter>
            <BSButton Target="ProctuctoSelecionado">Cancel</BSButton>
            @*<BSButton IsSubmit="true" Color="BSColor.Primary">Save</BSButton>*@
        </BSModalFooter>
    </BSForm>
</BSModal>

<BSButton Color="BSColor.Primary" Target="ProctuctoSelecionado">Buscar Producto</BSButton>



@if (!string.IsNullOrEmpty(Error))
{ 
        <p>@Error</p>
}



@code {
    private int currentCount = 0;
    RegVentasCab regVentasCab = new RegVentasCab();
    RegVentasDet regVentasDet = new RegVentasDet();
    //    public List<VentasCAB> ventasCABs { get; set; }
    public string Error { get; set; }
    public RespuestaGenerica respuestaGenerica { get; set; }
    public List<ListaProducto> listaProductos { get; set; }

    //POPUP
    BSModal refModal;
    private SeleccionGenerica SeleccionProducto = new SeleccionGenerica();
    private async Task SelecionProducto(SeleccionGenerica e)
    {
        SeleccionProducto = e;
    }

    private async Task Update()
    {
        blazorStrap.ForwardClick("ProctuctoSelecionado");
    }

    private async Task OnValidSubmit() {

        try
        {
            Console.WriteLine("Los Datos son" + regVentasCab.IdVendedor12 + " ," + regVentasCab.IdCliente12 + "," + regVentasCab.FechaEmi25);
            respuestaGenerica = await ServicioAPI.ModificarCAB(regVentasCab);
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }
    }

    private void IncrementCount()
    {
        currentCount++;
    }


    private void SelecionProductoPopUP()
    {
        Console.WriteLine("Si esta pasando por aqui");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            listaProductos = await ServicioAPI.ProductoListar("0", "Null");
        }
        catch (Exception ex)
        {
            Error = "ProductoListar : " + ex.Message;
        }
    }
}
